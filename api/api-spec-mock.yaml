openapi: 3.0.0
# THIS FILE IS ONLY TO MOCK THE SERVER. DO NOT USE IT AS PART OF RNAPDBEE DOCUMENTATION
info:
  description: "This is API of the back-end service of RNApdbee v3.0."
  version: "1.0.0"
  title: "RNApdbee Backend"


tags:
  - name: "3D -> (...)"
    description: "Access to RNApdbee engine for 3D calculations"
  - name: "3D -> multi 2D"
    description: "Access to RNApdbee engine for Multi calculations"
  - name: "2D -> (...)"
    description: "Access to RNApdbee engine for 2D calculations"
  - name: "(...) -> Image"
    description: "Access to RNApdbee engine for Image calculations"

servers:
  - url: '{protocol}://RNApdbee.cs.put.poznan.pl/api/v1/engine'
    variables:
      port:
        enum:
          - '4000'
          - '4010'
        default: '4000'
      protocol:
        enum:
          - http
          - https
        default: http

paths:

  /api/v1/engine/3d/:
    post:
      tags:
        - "3D -> (...)"
      summary: "Perform a 3d calculation based on the payload"
      description: ""
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                fileContent:
                  type: "string"
                modelSelection:
                  $ref: "#/components/schemas/ModelSelection"
                analysisTool:
                  $ref: "#/components/schemas/AnalysisTool"
                nonCanonicalHandling:
                  $ref: "#/components/schemas/NonCanonicalHandling"
                removeIsolated:
                  type: "boolean"
                structuralElementsHandling:
                  $ref: "#/components/schemas/StructuralElementsHandling"
                visualizationTool:
                  $ref: "#/components/schemas/VisualizationTools"
              required:
                - fileContent
                - modelSelection
                - analysisTool
                - nonCanonicalHandling
                - removeIsolated
                - structuralElementsHandling
                - visualizationTool
      responses:
        "400":
          description: "Bad request"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Output3D"

  /api/v1/engine/3d/{ID}:
    get:
      tags:
        - "3D -> (...)"
      summary: "Fetch an existing 3d calculation"
      description: ""
      parameters:
        - name: "ID"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "ID of resource in the database"
      responses:
        "400":
          description: "Invalid supplied"
        "404":
          description: "Resource not found"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Output3D"

  /api/v1/engine/3d/pdb/{PDBID}:
    post:
      tags:
        - "3D -> (...)"
      summary: "Perform a 3d calculation based on object fetched from Protein Data Bank"
      description: ""
      parameters:
        - name: "PDBID"
          in: "path"
          required: true
          schema:
            type: "string"
          description: "PDBID of the object in Protein Data Bank"
      responses:
        "400":
          description: "Bad request"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Output3D"

  /api/v1/engine/multi/:
    post:
      tags:
        - "3D -> multi 2D"
      summary: "Perform a multi calculation"
      description: ""
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                fileContent:
                  type: "string"
                modelSelection:
                  $ref: "#/components/schemas/ModelSelection"
                includeNonCanonical:
                  type: "boolean"
                removeIsolated:
                  type: "boolean"
                visualizationTool:
                  $ref: "#/components/schemas/VisualizationTools"
              required:
                - fileContent
                - modelSelection
                - includeNonCanonical
                - removeIsolated
                - visualizationTool
      responses:
        "400":
          description: "Bad request"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutputMulti"

  /api/v1/engine/multi/{ID}:
    get:
      tags:
        - "3D -> multi 2D"
      summary: "Fetch an existing multi calculation"
      description: ""
      parameters:
        - name: "ID"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "ID of resource in the database"
      responses:
        "400":
          description: "Invalid supplied"
        "404":
          description: "Resource not found"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutputMulti"

  /api/v1/engine/multi/pdb/{PDBID}:
    post:
      tags:
        - "3D -> multi 2D"
      summary: "Perform a multi based on object fetched from Protein Data Bank"
      description: ""
      parameters:
        - name: "PDBID"
          in: "path"
          required: true
          schema:
            type: "string"
          description: "ID of resource in the Protein Data Bank"

      responses:
        "400":
          description: "Bad request"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutputMulti"

  /api/v1/engine/2d/:
    post:
      tags:
        - "2D -> (...)"
      summary: "Perform a 2D calculation"
      description: ""
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                fileContent:
                  type: "string"
                removeIsolated:
                  type: "boolean"
                structuralElementsHandling:
                  $ref: "#/components/schemas/StructuralElementsHandling"
                visualizationTool:
                  $ref: "#/components/schemas/VisualizationTools"
              required:
                - fileContent
                - removeIsolated
                - structuralElementsHandling
                - visualizationTool
      responses:
        "400":
          description: "Bad request"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Output2D"

  /api/v1/engine/2d/{ID}:
    get:
      tags:
        - "2D -> (...)"
      summary: "Fetch a 2D calculation from the database"
      description: ""
      parameters:
        - name: "ID"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "ID of resource in the database"
      responses:
        "400":
          description: "Bad request"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Output2D"

  /api/v1/engine/image/:
    post:
      tags:
        - "(...) -> Image"
      summary: "Perform an image calculation"
      description: ""
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                fileContent:
                  type: "string"
                structuralElementsHandling:
                  $ref: "#/components/schemas/StructuralElementsHandling"
                visualizationTool:
                  $ref: "#/components/schemas/VisualizationTools"
              required:
                - fileContent
                - structuralElementsHandling
                - visualizationTool
      responses:
        "400":
          description: "Bad request"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutputImage"

  /api/v1/engine/image/{ID}:
    get:
      tags:
        - "(...) -> Image"
      summary: "Fetch an image calculation from the database"
      description: ""
      parameters:
        - name: "ID"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "ID of resource in the database"
      responses:
        "400":
          description: "Bad request"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutputImage"

components:
  schemas:
    NonCanonicalHandling:
      type: "string"
      enum:
        - "VisualizationOnly"
        - "TextAndVisualization"
        - "Ignore"
    AnalysisTool:
      type: "string"
      enum:
        - "fr3d-python"
        - "bpnet"
        - "baRNAba"
        - "RNAView"
        - "MC-Annotate"
    ModelSelection:
      type: "string"
      enum: ["First", "All"]
    VisualizationTools:
      type: "string"
      enum: ["VARNA", "PseudoViewer", "R-Chie", "RNAglib", "forna", "RNApuzzler", "RNAturtle", "RNAtraveler", "baRNAba", "None"]
    StructuralElementsHandling:
      type: "string"
      enum: ["UsePseudoknots", "IgnorePseudoknots"]

    Output3D:
      type: object
      properties:
        analysisOutput:
          $ref: "#/components/schemas/AnalysisOutput"
        output2D:
          $ref: "#/components/schemas/Output2D"
      required:
        - analysisOutput
        - output2D

    OutputMulti:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: "#/components/schemas/OutputMultiEntry"
      required:
        - entries

    OutputMultiEntry:
      type: object
      properties:
        output2D:
          $ref: "#/components/schemas/Output2D"
        consensusVisualization:
          $ref: "#/components/schemas/ConsensusVisualization"
      required:
        - output2D
        - consensusVisualization

    ConsensusVisualization:
      type: object

    Output2D:
      type: object
      properties:
        bpseq:
          $ref: "#/components/schemas/BPSEQ"
        ct:
          $ref: "#/components/schemas/CT"
        dotBarcket:
          $ref: "#/components/schemas/DotBracket"
        structuralElements:
          $ref: "#/components/schemas/StructuralElements"
        outputImage:
          $ref: "#/components/schemas/OutputImage"
      required:
        - bpseq
        - ct
        - dotBarcket
        - structuralElements
        - outputImage

    BPSEQ:
      type: object

    CT:
      type: object

    DotBracket:
      type: object

    StructuralElements:
      type: object

    OutputImage:
      type: object
      properties:
        visualization:
          $ref: "#/components/schemas/Visualization"
      required:
        - visualization

    Visualization:
      type: object

    AnalysisOutput:
      type: object
      properties:
        basePairs:
          type: array
          items:
            $ref: "#/components/schemas/BasePair"
        stackings:
          type: array
          items:
            $ref: "#/components/schemas/Stacking"
        baseRiboseInteractions:
          type: array
          items:
            $ref: "#/components/schemas/BaseRibose"
        basePhosphateInteractions:
          type: array
          items:
            $ref: "#/components/schemas/BasePhosphate"
        other:
          type: array
          items:
            $ref: "#/components/schemas/Other"
      required:
        - basePairs
        - stackings
        - baseRiboseInteractions
        - basePhosphateInteractions
        - other

    BasePair:
      type: object
      properties:
        nt1:
          $ref: "#/components/schemas/Residue"
        nt2:
          $ref: "#/components/schemas/Residue"
        leontisWesthof:
          $ref: "#/components/schemas/LeontisWesthof"
        saenger:
          $ref: "#/components/schemas/Saenger"
      required:
        - leontisWesthof
        - nt1
        - nt2

    BaseRibose:
      type: object
      properties:
        nt1:
          $ref: "#/components/schemas/Residue"
        nt2:
          $ref: "#/components/schemas/Residue"
        br:
          $ref: "#/components/schemas/BR"
      required:
        - nt1
        - nt2

    BasePhosphate:
      type: object
      properties:
        nt1:
          $ref: "#/components/schemas/Residue"
        nt2:
          $ref: "#/components/schemas/Residue"
        bph:
          $ref: "#/components/schemas/BPh"
      required:
        - nt1
        - nt2

    Stacking:
      type: object
      properties:
        nt1:
          $ref: "#/components/schemas/Residue"
        nt2:
          $ref: "#/components/schemas/Residue"
        topology:
          $ref: "#/components/schemas/StackingTopology"
      required:
        - nt1
        - nt2

    Other:
      type: object
      properties:
        nt1:
          $ref: "#/components/schemas/Residue"
        nt2:
          $ref: "#/components/schemas/Residue"
      required:
        - nt1
        - nt2

    Residue:
      type: object
      properties:
        label:
          $ref: "#/components/schemas/ResidueLabel"
        auth:
          $ref: "#/components/schemas/ResidueAuth"
        atoms:
          type: array
          items:
            $ref: "#/components/schemas/Atom"
      required:
        - atoms

    Atom:
      type: object

    ResidueAuth:
      type: object
      properties:
        chain:
          type: string
        number:
          type: integer
        icode:
          type: string
        name:
          type: string
      required:
        - chain
        - number
        - icode
        - name

    ResidueLabel:
      type: object
      properties:
        chain:
          type: string
        number:
          type: integer
        name:
          type: string
      required:
        - chain
        - number
        - name

    LeontisWesthof:
      type: "string"
      enum:
        - "cWW"
        - "cWH"
        - "cWS"
        - "cHW"
        - "cHH"
        - "cHS"
        - "cSW"
        - "cSH"
        - "cSS"
        - "tWW"
        - "tWH"
        - "tWS"
        - "tHW"
        - "tHH"
        - "tHS"
        - "tSW"
        - "tSH"
        - "tSS"

    Saenger:
      type: "string"
      enum:
        - "I"
        - "II"
        - "III"
        - "IV"
        - "V"
        - "VI"
        - "VII"
        - "VIII"
        - "IX"
        - "X"
        - "XI"
        - "XII"
        - "XIII"
        - "XIV"
        - "XV"
        - "XVI"
        - "XVII"
        - "XVIII"
        - "XIX"
        - "XX"
        - "XXI"
        - "XXII"
        - "XXIII"
        - "XXIV"
        - "XXV"
        - "XXVI"
        - "XXVII"
        - "XXVIII"

    BR:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9

    BPh:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9

    StackingTopology:
      type: string
      enum:
        - upward
        - downward
        - inward
        - outward
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
